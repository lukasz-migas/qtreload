name: Test

on:
  push:
    branches:
      - main
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0" # every week (for --pre release tests)

jobs:
  test:
    name: Test
    uses: pyapp-kit/workflows/.github/workflows/test-pyrepo.yml@v2
    with:
      os: ${{ matrix.platform }}
      python-version: ${{ matrix.python-version }}
      qt: ${{ matrix.backend }}
      pip-install-pre-release: ${{ github.event_name == 'schedule' }}
      coverage-upload: artifact
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-13]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        backend: [pyqt5, pyside2, pyqt6]
        exclude:
          # Abort (core dumped) on linux pyqt6, unknown reason
          - platform: ubuntu-latest
            backend: pyqt6
          # lack of wheels for pyside2/py3.11
          - python-version: "3.11"
            backend: pyside2
          - python-version: "3.12"
            backend: pyside2
          - python-version: "3.12"
            backend: pyqt5
        include:
          - python-version: "3.13"
            platform: windows-latest
            backend: "pyqt6"
          - python-version: "3.13"
            platform: ubuntu-latest
            backend: "pyqt6"

          - python-version: "3.10"
            platform: macos-latest
            backend: "'pyside6<6.8'"
          - python-version: "3.11"
            platform: macos-latest
            backend: "'pyside6<6.8'"
          - python-version: "3.10"
            platform: windows-latest
            backend: "'pyside6<6.8'"
          - python-version: "3.12"
            platform: windows-latest
            backend: "'pyside6<6.8'"

          # legacy Qt
          - python-version: 3.9
            platform: ubuntu-latest
            backend: "pyqt5==5.12.*"
          - python-version: 3.9
            platform: ubuntu-latest
            backend: "pyqt5==5.13.*"
          - python-version: 3.9
            platform: ubuntu-latest
            backend: "pyqt5==5.14.*"

#  test:
#    name: ${{ matrix.platform }} py${{ matrix.python }} ${{ matrix.backend }}
#    runs-on: ${{ matrix.platform }}
#    strategy:
#      fail-fast: false
#      matrix:
#        platform: [ubuntu-latest, windows-latest]
#        python: ["3.9", "3.10", "3.11", "3.12"]
#        backend: [pyqt5, pyside2]
#        include:
#          - python: "3.10"
#            platform: macos-latest
#            backend: pyqt5
#          # test with minimum specified requirements
#          - python: "3.9"
#            platform: ubuntu-20.04
#            backend: pyqt5
#            MIN_REQ: 1
#          # test without any Qt backends
#          - python: "3.9"
#            platform: ubuntu-20.04
#            backend: headless
#          - python: "3.12"
#            platform: ubuntu-latest
#            backend: pyqt6
#            tox_extras: "testing_extra"
#          - python: "3.11"
#            platform: ubuntu-latest
#            backend: pyside6
#            tox_extras: "testing_extra"
#        exclude:
#          - python: "3.11"
#            backend: pyside2
#          - python: "3.12"
#            backend: pyside2
#          - platform: windows-latest
#            backend: pyside2
#
#    steps:
#      - name: Cancel Previous Runs
#        uses: styfle/cancel-workflow-action@0.12.1
#        with:
#          access_token: ${{ github.token }}
#
#      - uses: actions/checkout@v4
#
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v5
#        with:
#          python-version: ${{ matrix.python-version }}
#
#      - uses: tlambert03/setup-qt-libs@v1.8
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          python -m pip install setuptools tox tox-gh-actions
#
#      - name: Test with tox
#        uses: GabrielBB/xvfb-action@v1
#        timeout-minutes: 3
#        with:
#          run: python -m tox
#        env:
#          PLATFORM: ${{ matrix.platform }}
#          BACKEND: ${{ matrix.backend }}
#
#      - name: Coverage
#        uses: codecov/codecov-action@v5

  # test_old_qtpy:
  #   name: qtpy minreq
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: tlambert03/setup-qt-libs@v1.5
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.9"

  #     - name: Install
  #       run: |
  #         python -m pip install -U pip
  #         python -m pip install -e .[test,pyqt5]
  #         python -m pip install qtpy==1.1.0 typing-extensions==3.10.0.0

  #     - name: Test
  #       uses: GabrielBB/xvfb-action@v1
  #       with:
  #         run: python -m pytest --color=yes

#  check-manifest:
#    name: Check Manifest
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-python@v5
#        with:
#          python-version: "3.x"
#      - run: pip install check-manifest && check-manifest

  check-manifest:
    name: Check Manifest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx run check-manifest

  deploy_test:
    name: Deploy to PyPI (test)
    needs: [test, check-manifest]
    if: success() && startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: install
        run: |
          git tag
          python -m pip install --upgrade pip
          pip install -U pip build twine
          python -m build
          twine check dist/*
          ls -lh dist

      - name: Build and publish
        run: twine upload --repository testpypi dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}

  deploy:
    name: Deploy
    needs: deploy_test
    if: success() && startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: install
        run: |
          git tag
          pip install -U pip build twine
          python -m build
          twine check dist/*
          ls -lh dist

      - name: Build and publish
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      - uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true